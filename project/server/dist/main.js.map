{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-us/about-us.component.css","webpack:///./src/app/about-us/about-us.component.html","webpack:///./src/app/about-us/about-us.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/appointments/appointments.component.html","webpack:///./src/app/appointments/appointments.component.scss","webpack:///./src/app/appointments/appointments.component.ts","webpack:///./src/app/appointments/professional-cancellation-dialog/professional-cancellation-dialog.component.html","webpack:///./src/app/appointments/professional-cancellation-dialog/professional-cancellation-dialog.component.scss","webpack:///./src/app/appointments/professional-cancellation-dialog/professional-cancellation-dialog.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login-dialog/login-dialog.component.css","webpack:///./src/app/login/login-dialog/login-dialog.component.html","webpack:///./src/app/login/login-dialog/login-dialog.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/new-account-dialog/new-account-dialog.component.css","webpack:///./src/app/login/new-account-dialog/new-account-dialog.component.html","webpack:///./src/app/login/new-account-dialog/new-account-dialog.component.ts","webpack:///./src/app/models/account-type.model.ts","webpack:///./src/app/models/message.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/patient/patient.component.css","webpack:///./src/app/patient/patient.component.html","webpack:///./src/app/patient/patient.component.ts","webpack:///./src/app/patient/profile-patient/profile-patient.component.css","webpack:///./src/app/patient/profile-patient/profile-patient.component.html","webpack:///./src/app/patient/profile-patient/profile-patient.component.ts","webpack:///./src/app/patient/search-patient/search-patient.component.css","webpack:///./src/app/patient/search-patient/search-patient.component.html","webpack:///./src/app/patient/search-patient/search-patient.component.ts","webpack:///./src/app/professional/professional.component.css","webpack:///./src/app/professional/professional.component.html","webpack:///./src/app/professional/professional.component.ts","webpack:///./src/app/professional/profile-professional/profile-professional.component.css","webpack:///./src/app/professional/profile-professional/profile-professional.component.html","webpack:///./src/app/professional/profile-professional/profile-professional.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".about-us-text {\\r\\n  font-size: 18px;\\r\\n  margin-left: 10px;\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<p style=\\\"margin-left: 10px; margin-right: 10px;\\\">\\r\\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Non quam lacus suspendisse faucibus interdum posuere. Iaculis eu non diam phasellus. Eget duis at tellus at urna condimentum mattis pellentesque id. Viverra orci sagittis eu volutpat odio facilisis mauris. Varius vel pharetra vel turpis nunc. Suspendisse interdum consectetur libero id faucibus. Sem fringilla ut morbi tincidunt augue interdum velit. Blandit volutpat maecenas volutpat blandit aliquam etiam erat velit scelerisque. Commodo quis imperdiet massa tincidunt nunc pulvinar. Natoque penatibus et magnis dis parturient montes nascetur ridiculus mus. Faucibus et molestie ac feugiat sed. Nunc pulvinar sapien et ligula. Adipiscing elit pellentesque habitant morbi tristique senectus. Adipiscing commodo elit at imperdiet dui. Tincidunt praesent semper feugiat nibh sed pulvinar proin gravida.\\r\\n</p>\\r\\n<p style=\\\"margin-left: 10px; margin-right: 10px;\\\">\\r\\n  Ultricies tristique nulla aliquet enim tortor at auctor urna nunc. Amet mauris commodo quis imperdiet massa tincidunt nunc pulvinar. Vitae suscipit tellus mauris a diam maecenas sed enim ut. Viverra adipiscing at in tellus integer feugiat. Purus sit amet luctus venenatis lectus magna fringilla. Aliquam ultrices sagittis orci a scelerisque purus semper eget. Faucibus nisl tincidunt eget nullam non nisi. Placerat orci nulla pellentesque dignissim enim sit amet. Nulla aliquet porttitor lacus luctus accumsan. Enim lobortis scelerisque fermentum dui faucibus. At quis risus sed vulputate.\\r\\n</p>\\r\\n<p style=\\\"margin-left: 10px; margin-right: 10px;\\\">\\r\\n  Orci dapibus ultrices in iaculis nunc sed augue. Tempus urna et pharetra pharetra massa. Arcu vitae elementum curabitur vitae nunc sed velit dignissim. Elementum curabitur vitae nunc sed. Adipiscing elit duis tristique sollicitudin nibh sit. Arcu ac tortor dignissim convallis aenean et. Morbi enim nunc faucibus a pellentesque sit amet porttitor. Ultricies lacus sed turpis tincidunt id aliquet risus feugiat in. Tristique senectus et netus et malesuada fames ac turpis egestas. Quisque id diam vel quam elementum pulvinar etiam non. Suspendisse sed nisi lacus sed viverra tellus. Congue eu consequat ac felis donec. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. Netus et malesuada fames ac turpis egestas maecenas pharetra convallis. Scelerisque eu ultrices vitae auctor eu augue ut. Phasellus egestas tellus rutrum tellus pellentesque. Nullam ac tortor vitae purus. Fringilla urna porttitor rhoncus dolor purus non enim praesent elementum. Faucibus vitae aliquet nec ullamcorper sit amet risus nullam eget. In cursus turpis massa tincidunt dui ut ornare lectus sit.\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  debug = true;\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatRadioModule,\r\n  MatMenuModule,\r\n  MatSelectModule,\r\n  MatFormFieldModule,\r\n  MatTabsModule,\r\n  MatSnackBarModule,\r\n  MatTableModule,\r\n  MatTooltipModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule\r\n} from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PatientComponent } from './patient/patient.component';\r\nimport { ProfessionalComponent } from './professional/professional.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faNotesMedical,\r\n  faUser,\r\n  faArrowLeft,\r\n  faAngleLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { SearchPatientComponent } from './patient/search-patient/search-patient.component';\r\nimport { ProfilePatientComponent } from './patient/profile-patient/profile-patient.component';\r\nimport { ProfileProfessionalComponent } from './professional/profile-professional/profile-professional.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { LoginDialogComponent } from './login/login-dialog/login-dialog.component';\r\nimport { NewAccountDialogComponent } from './login/new-account-dialog/new-account-dialog.component';\r\nimport { AppointmentsComponent } from './appointments/appointments.component';\r\nimport {\r\n  ProfessionalCancellationDialogComponent\r\n} from './appointments/professional-cancellation-dialog/professional-cancellation-dialog.component';\r\n\r\nlibrary.add(faNotesMedical, faUser, faAngleLeft);\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: PatientComponent },\r\n  { path: 'professional', component: ProfessionalComponent },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' }\r\n  /*   { path: 'hero/:id', component: HeroDetailComponent },\r\n  {\r\n    path: 'heroes',\r\n    component: HeroListComponent,\r\n    data: { title: 'Heroes List' }\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/heroes',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: PageNotFoundComponent } */\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    PatientComponent,\r\n    ProfessionalComponent,\r\n    HeaderComponent,\r\n    SearchPatientComponent,\r\n    ProfilePatientComponent,\r\n    ProfileProfessionalComponent,\r\n    AboutUsComponent,\r\n    LoginDialogComponent,\r\n    NewAccountDialogComponent,\r\n    AppointmentsComponent,\r\n    ProfessionalCancellationDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule,\r\n    RouterModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatRadioModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTabsModule,\r\n    HttpClientModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatDialogModule\r\n  ],\r\n  entryComponents: [LoginDialogComponent, NewAccountDialogComponent, ProfessionalCancellationDialogComponent],\r\n  providers: [MatNativeDateModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<p class=\\\"mat-typography requested-appointments-text\\\">\\r\\n  &nbsp;Requested Appointments\\r\\n</p>\\r\\n<table mat-table\\r\\n  [dataSource]=\\\"dataSourceTop\\\">\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[0] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">\\r\\n      {{ element.name.firstName }} {{ element.name.lastName }}\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"Date\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[1] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">{{ element.date }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"About\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[2] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\"\\r\\n      matTooltip=\\\"{{ element.about.bio }}\\\">\\r\\n      {{ element.about.text }}\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container *ngIf=\\\"isPatient\\\"\\r\\n    matColumnDef=\\\"Modify\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[3] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">\\r\\n      <button class=\\\"cancel-button\\\"\\r\\n        mat-button\\r\\n        (click)=\\\"updateAppointment(element.modify, false)\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container *ngIf=\\\"!isPatient\\\"\\r\\n    matColumnDef=\\\"Modify\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[3] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">\\r\\n      <button class=\\\"approve-button\\\"\\r\\n        mat-button\\r\\n        (click)=\\\"updateAppointment(element.modify, true, false)\\\">\\r\\n        Approve\\r\\n      </button>\\r\\n      <button class=\\\"cancel-button\\\"\\r\\n        mat-button\\r\\n        (click)=\\\"updateAppointment(element.modify, false, false)\\\">\\r\\n        Deny\\r\\n      </button>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row\\r\\n    style=\\\"height: 30px !important;\\\"\\r\\n    *matHeaderRowDef=\\\"columns\\\"></tr>\\r\\n  <tr mat-row\\r\\n    style=\\\"height: 30px !important;\\\"\\r\\n    *matRowDef=\\\"let row; columns: columns\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<p class=\\\"mat-typography\\\"\\r\\n  style=\\\"font-size: 20px; position: relative; bottom: 4px;\\\">\\r\\n  &nbsp;Approved Appointments\\r\\n</p>\\r\\n<table mat-table\\r\\n  [dataSource]=\\\"dataSourceBottom\\\">\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[0] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">\\r\\n      {{ element.name.firstName }} {{ element.name.lastName }}\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"Date\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[1] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">{{ element.date }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"About\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[2] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\"\\r\\n      matTooltip=\\\"{{ element.about.bio }}\\\">\\r\\n      {{ element.about.text }}\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"Modify\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[3] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">\\r\\n      <button class=\\\"cancel-button\\\"\\r\\n        mat-button\\r\\n        (click)=\\\"updateAppointment(element.modify, false, true)\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row\\r\\n    style=\\\"height: 30px !important;\\\"\\r\\n    *matHeaderRowDef=\\\"columns\\\"></tr>\\r\\n  <tr mat-row\\r\\n    style=\\\"height: 30px !important;\\\"\\r\\n    *matRowDef=\\\"let row; columns: columns\\\"></tr>\\r\\n</table>\\r\\n\"","module.exports = \"table {\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  width: 100%; }\\n\\n.requested-appointments-text {\\n  font-size: 20px;\\n  position: relative;\\n  bottom: 4px;\\n  padding-top: 10px; }\\n\\n.cancel-button {\\n  display: -ms-grid;\\n  display: grid;\\n  border: solid;\\n  border-radius: 20%;\\n  border-color: red;\\n  color: red;\\n  background-color: white;\\n  height: 35px; }\\n\\n.approve-button {\\n  display: -ms-grid;\\n  display: grid;\\n  border: solid;\\n  border-radius: 20%;\\n  border-color: green;\\n  color: green;\\n  background-color: white;\\n  height: 35px; }\\n\"","import { Message } from './../models/message.model';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ProfessionalCancellationDialogComponent } from './professional-cancellation-dialog/professional-cancellation-dialog.component';\r\nimport { Appointment } from './../models/appointment.model';\r\nimport { User } from './../models/user.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\nimport { AccountType } from '../models/account-type.model';\r\n\r\n@Component({\r\n  selector: 'app-appointments',\r\n  templateUrl: './appointments.component.html',\r\n  styleUrls: ['./appointments.component.scss']\r\n})\r\nexport class AppointmentsComponent implements OnInit {\r\n  columns: string[] = ['Name', 'Date', 'About', 'Modify'];\r\n  dataSourceTop;\r\n  dataSourceBottom;\r\n  loggedInUser: User = new User();\r\n  allProfessionals: User[] = [];\r\n  allPatients: User[] = [];\r\n  accountTypes = new AccountType();\r\n  requestedDone = false;\r\n  approvedDone = false;\r\n  isPatient = true;\r\n\r\n  constructor(private data: DataService, private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.data.getLoggedInUser().subscribe(user => {\r\n      if (user.type !== undefined) {\r\n        this.loggedInUser = user;\r\n        if (this.loggedInUser.type.includes(this.accountTypes.PATIENT)) {\r\n          this.isPatient = true;\r\n        } else {\r\n          this.isPatient = false;\r\n        }\r\n        (this.requestedDone = false), (this.approvedDone = false);\r\n        if (this.loggedInUser.type.includes(this.accountTypes.PATIENT)) {\r\n          if (this.allProfessionals.length > 0) {\r\n            this.setRequestedAppointents(this.accountTypes.PATIENT);\r\n            this.setApprovedAppointments(this.accountTypes.PATIENT);\r\n          }\r\n        } else {\r\n          if (this.allPatients.length > 0) {\r\n            this.setRequestedAppointents('Professional');\r\n            this.setApprovedAppointments('Professional');\r\n          }\r\n        }\r\n      }\r\n    });\r\n    if (\r\n      this.loggedInUser.type !== undefined &&\r\n      this.loggedInUser.type.includes(this.accountTypes.PATIENT)\r\n    ) {\r\n      this.data.getAllProfessionals().subscribe(allProfs => {\r\n        this.allProfessionals = allProfs;\r\n        if (this.allProfessionals.length > 0) {\r\n          this.setRequestedAppointents(this.accountTypes.PATIENT);\r\n          this.setApprovedAppointments(this.accountTypes.PATIENT);\r\n        }\r\n      });\r\n    } else {\r\n      this.data.getAllPatients().subscribe(allPatients => {\r\n        this.allPatients = allPatients;\r\n        if (this.allPatients.length > 0) {\r\n          this.setRequestedAppointents('Professional');\r\n          this.setApprovedAppointments('Professional');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setRequestedAppointents(type: string) {\r\n    const requestedAppointments = [];\r\n    if (\r\n      type.includes(this.accountTypes.PATIENT) &&\r\n      this.allProfessionals.length > 0 &&\r\n      !this.requestedDone\r\n    ) {\r\n      this.loggedInUser.requestedAppointments.forEach(appt => {\r\n        appt.dateTime = new Date(appt.dateTime);\r\n        let hours = appt.dateTime.getHours();\r\n        let timeString: string;\r\n        if (hours > 12) {\r\n          hours = hours - 12;\r\n          timeString = hours.toString() + 'pm';\r\n        } else {\r\n          timeString = hours.toString() + 'am';\r\n        }\r\n\r\n        this.allProfessionals.forEach(prof => {\r\n          if (appt.id === prof._id) {\r\n            const requestedAppointment: {\r\n              _id: string;\r\n              name: { firstName: string; lastName: string };\r\n              date: string;\r\n              about: { text: string; bio: string };\r\n              modify: Appointment;\r\n            } = {\r\n              _id: prof._id,\r\n              name: { firstName: prof.firstName, lastName: prof.lastName },\r\n              date: appt.dateTime.toLocaleDateString() + ' at ' + timeString,\r\n              about: { text: 'Scroll over for bio!', bio: prof.bio },\r\n              modify: appt\r\n            };\r\n            requestedAppointments.push(requestedAppointment);\r\n          }\r\n        });\r\n      });\r\n      this.requestedDone = true;\r\n      this.dataSourceTop = requestedAppointments;\r\n    } else if (\r\n      !type.includes(this.accountTypes.PATIENT) &&\r\n      this.allPatients.length > 0 &&\r\n      !this.requestedDone\r\n    ) {\r\n      this.loggedInUser.requestedAppointments.forEach(appt => {\r\n        appt.dateTime = new Date(appt.dateTime);\r\n        let hours = appt.dateTime.getHours();\r\n        let timeString: string;\r\n        if (hours > 12) {\r\n          hours = hours - 12;\r\n          timeString = hours.toString() + 'pm';\r\n        } else {\r\n          timeString = hours.toString() + 'am';\r\n        }\r\n\r\n        this.allPatients.forEach(patient => {\r\n          if (appt.id === patient._id) {\r\n            const requestedAppointment: {\r\n              _id: string;\r\n              name: { firstName: string; lastName: string };\r\n              date: string;\r\n              about: { text: string; bio: string };\r\n              modify: Appointment;\r\n            } = {\r\n              _id: patient._id,\r\n              name: {\r\n                firstName: patient.firstName,\r\n                lastName: patient.lastName\r\n              },\r\n              date: appt.dateTime.toLocaleDateString() + ' at ' + timeString,\r\n              about: { text: 'Scroll over for bio!', bio: patient.bio },\r\n              modify: appt\r\n            };\r\n            requestedAppointments.push(requestedAppointment);\r\n          }\r\n        });\r\n      });\r\n      this.requestedDone = true;\r\n      this.dataSourceTop = requestedAppointments;\r\n    }\r\n  }\r\n\r\n  setApprovedAppointments(type: string) {\r\n    const approvedAppointments = [];\r\n    if (\r\n      type.includes(this.accountTypes.PATIENT) &&\r\n      this.allProfessionals.length > 0 &&\r\n      !this.approvedDone\r\n    ) {\r\n      this.loggedInUser.approvedAppointments.forEach(appt => {\r\n        appt.dateTime = new Date(appt.dateTime);\r\n        let hours = appt.dateTime.getHours();\r\n        let timeString: string;\r\n        if (hours > 12) {\r\n          hours = hours - 12;\r\n          timeString = hours.toString() + 'pm';\r\n        } else {\r\n          timeString = hours.toString() + 'am';\r\n        }\r\n\r\n        this.allProfessionals.forEach(prof => {\r\n          if (appt.id === prof._id) {\r\n            const approvedAppointment: {\r\n              _id: string;\r\n              name: { firstName: string; lastName: string };\r\n              date: string;\r\n              about: { text: string; bio: string };\r\n              modify: Appointment;\r\n            } = {\r\n              _id: prof._id,\r\n              name: { firstName: prof.firstName, lastName: prof.lastName },\r\n              date: appt.dateTime.toLocaleDateString() + ' at ' + timeString,\r\n              about: { text: 'Scroll over for bio!', bio: prof.bio },\r\n              modify: appt\r\n            };\r\n            approvedAppointments.push(approvedAppointment);\r\n          }\r\n        });\r\n      });\r\n      this.approvedDone = true;\r\n      this.dataSourceBottom = approvedAppointments;\r\n    } else if (\r\n      !type.includes(this.accountTypes.PATIENT) &&\r\n      this.allPatients.length > 0 &&\r\n      !this.approvedDone\r\n    ) {\r\n      this.loggedInUser.approvedAppointments.forEach(appt => {\r\n        appt.dateTime = new Date(appt.dateTime);\r\n        let hours = appt.dateTime.getHours();\r\n        let timeString: string;\r\n        if (hours > 12) {\r\n          hours = hours - 12;\r\n          timeString = hours.toString() + 'pm';\r\n        } else {\r\n          timeString = hours.toString() + 'am';\r\n        }\r\n\r\n        this.allPatients.forEach(patient => {\r\n          if (appt.id === patient._id) {\r\n            const approvedAppointment: {\r\n              _id: string;\r\n              name: { firstName: string; lastName: string };\r\n              date: string;\r\n              about: { text: string; bio: string };\r\n              modify: Appointment;\r\n            } = {\r\n              _id: patient._id,\r\n              name: {\r\n                firstName: patient.firstName,\r\n                lastName: patient.lastName\r\n              },\r\n              date: appt.dateTime.toLocaleDateString() + ' at ' + timeString,\r\n              about: { text: 'Scroll over for bio!', bio: patient.bio },\r\n              modify: appt\r\n            };\r\n            approvedAppointments.push(approvedAppointment);\r\n          }\r\n        });\r\n      });\r\n      this.approvedDone = true;\r\n      this.dataSourceBottom = approvedAppointments;\r\n    }\r\n  }\r\n\r\n  updateAppointment(\r\n    appt: Appointment,\r\n    approval: boolean,\r\n    fromApprovedList: boolean\r\n  ) {\r\n    const appointmentToUpdate: {\r\n      patient: string;\r\n      professional: string;\r\n      date: Date;\r\n      accountType: string;\r\n    } = { patient: '', professional: '', date: new Date(), accountType: '' };\r\n    if (this.loggedInUser.type.includes(this.accountTypes.PATIENT)) {\r\n      appointmentToUpdate.patient = this.loggedInUser._id;\r\n      appointmentToUpdate.professional = appt.id;\r\n      appointmentToUpdate.date = new Date(appt.dateTime);\r\n      appointmentToUpdate.accountType = this.loggedInUser.type;\r\n    } else {\r\n      appointmentToUpdate.patient = appt.id;\r\n      appointmentToUpdate.professional = this.loggedInUser._id;\r\n      appointmentToUpdate.date = new Date(appt.dateTime);\r\n      appointmentToUpdate.accountType = this.loggedInUser.type;\r\n    }\r\n\r\n    if (approval) {\r\n      this.data.approveAppointment(appointmentToUpdate);\r\n    } else {\r\n      const dialogRef = this.dialog.open(ProfessionalCancellationDialogComponent, {\r\n        width: '500px',\r\n        height: '310px',\r\n        data: appointmentToUpdate,\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (dialogRef.componentInstance.message.text.length > 20) {\r\n          if (fromApprovedList) {\r\n            this.data.cancelApprovedAppointment(appointmentToUpdate);\r\n          } else {\r\n            this.data.cancelRequestedAppointment(appointmentToUpdate);\r\n          }\r\n        }\r\n      });\r\n      /*       if (fromApprovedList) {\r\n              this.data.cancelApprovedAppointment(appointmentToUpdate);\r\n            } else {\r\n              this.data.cancelRequestedAppointment(appointmentToUpdate);\r\n            } */\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>Are you sure?</h2>\\r\\n<mat-dialog-content>\\r\\n  <form class=\\\"form-components-wrapper\\\"\\r\\n    #f=\\\"ngForm\\\"\\r\\n    (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <mat-form-field class=\\\"message-text\\\">\\r\\n      <textarea matInput\\r\\n        name=\\\"message-text\\\"\\r\\n        placeholder=\\\"Please provide a reason for the cancellation\\\"\\r\\n        type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"message.text\\\"\\r\\n        matTextareaAutosize\\r\\n        matAutosizeMinRows=4\\r\\n        required\\r\\n        minlength=\\\"20\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    <button mat-button\\r\\n      type=\\\"submit\\\"\\r\\n      [disabled]=\\\"!f.valid\\\"\\r\\n      class=\\\"confirm-button\\\">Confirm</button>\\r\\n    <button mat-button\\r\\n      class=\\\"cancel-button\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-dialog-close>Cancel</button>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\"","module.exports = \".form-components-wrapper {\\n  display: grid;\\n  grid-template-columns: 220px 220px;\\n  grid-gap: 10px;\\n  /* autoprefixer: off */\\n  grid-auto-rows: 45px;\\n  grid-template-areas: 'message-text    message-text'\\r 'message-text    message-text'\\r 'message-text    message-text'\\r 'confirm-button  cancel-button'; }\\n\\n.message-text {\\n  grid-area: message-text;\\n  width: 96%;\\n  height: 100%;\\n  padding-left: 15px;\\n  padding-top: 5px;\\n  display: -ms-grid;\\n  display: grid;\\n  border: solid;\\n  border-radius: 5%; }\\n\\n.cancel-button {\\n  grid-area: cancel-button;\\n  display: -ms-grid;\\n  display: grid;\\n  border: solid;\\n  border-radius: 20%;\\n  border-color: red;\\n  color: red;\\n  background-color: white;\\n  height: 35px; }\\n\\n.confirm-button {\\n  grid-area: confirm-button;\\n  display: -ms-grid;\\n  display: grid;\\n  border: solid;\\n  border-radius: 20%;\\n  border-color: green;\\n  color: green;\\n  background-color: white;\\n  height: 35px; }\\n\"","import { AccountType } from './../../models/account-type.model';\r\nimport { Message } from './../../models/message.model';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-professional-cancellation-dialog',\r\n  templateUrl: './professional-cancellation-dialog.component.html',\r\n  styleUrls: ['./professional-cancellation-dialog.component.scss']\r\n})\r\nexport class ProfessionalCancellationDialogComponent implements OnInit {\r\n  message = new Message();\r\n  accountTypes = new AccountType();\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\r\n    patient: string;\r\n    professional: string;\r\n    date: Date;\r\n    accountType: string;\r\n  }) { }\r\n\r\n  ngOnInit() {\r\n    if (this.data.accountType.includes(this.accountTypes.PATIENT)) {\r\n      this.message.from = this.data.patient;\r\n      this.message.to = this.data.professional;\r\n    } else {\r\n      this.message.from = this.data.professional;\r\n      this.message.to = this.data.patient;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.message.dateTime = new Date();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { User } from './models/user.model';\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AccountType } from './models/account-type.model';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  accountTypes = new AccountType();\r\n  private loggedInUser = new BehaviorSubject<User>(new User());\r\n  private allProfessionals = new BehaviorSubject<User[]>([]);\r\n  private allPatients = new BehaviorSubject<User[]>([]);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  getLoggedInUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.loggedInUser.next(user);\r\n    }\r\n    return this.loggedInUser;\r\n  }\r\n\r\n  logout() {\r\n    this.loggedInUser.next(new User());\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  private saveUserLocally(user: User) {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  createNewAccount(form): BehaviorSubject<User> {\r\n    this.http\r\n      .put<User>('api/newAccount', JSON.stringify(form), httpOptions)\r\n      .subscribe(\r\n        data => {\r\n          this.loggedInUser.next(data);\r\n          if (data) {\r\n            this.saveUserLocally(data);\r\n            if (data.type.includes(this.accountTypes.PATIENT)) {\r\n              this.router.navigateByUrl('user');\r\n            } else {\r\n              this.router.navigateByUrl('professional');\r\n            }\r\n            this.dialog.closeAll();\r\n          }\r\n\r\n          this.snackBar.open('New Account Created Successfully.', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyle'\r\n          });\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          console.log(err);\r\n          this.snackBar.open('An Error Has Occurred. Please try again.', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyleError'\r\n          });\r\n        }\r\n      );\r\n    return this.loggedInUser;\r\n  }\r\n\r\n  login(email, password): BehaviorSubject<User> {\r\n    this.http\r\n      .post<User>('api/login', JSON.stringify({ email, password }), httpOptions)\r\n      .subscribe(\r\n        data => {\r\n          this.loggedInUser.next(data);\r\n          if (data === null) {\r\n            const user = new User();\r\n            user.email = email;\r\n            this.loggedInUser.next(user);\r\n          } else {\r\n            this.saveUserLocally(data);\r\n          }\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          console.log(err);\r\n          this.snackBar.open('An Error Has Occurred. Please try again.', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyleError'\r\n          });\r\n        }\r\n      );\r\n    return this.loggedInUser;\r\n  }\r\n\r\n  updateUser(originalEmail: string, user: User): BehaviorSubject<User> {\r\n    this.http\r\n      .put<User>(\r\n        'api/updateUser',\r\n        JSON.stringify({ originalEmail, user }),\r\n        httpOptions\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          this.loggedInUser.next(data);\r\n          this.saveUserLocally(data);\r\n          this.snackBar.open('Account Updated Successfully.', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyle'\r\n          });\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          console.log(err);\r\n          this.snackBar.open('An Error Has Occurred. Please try again.', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyleError'\r\n          });\r\n        }\r\n      );\r\n    return this.loggedInUser;\r\n  }\r\n\r\n  updateUserLocally(user: User) {\r\n    this.saveUserLocally(user);\r\n    this.loggedInUser.next(user);\r\n  }\r\n\r\n  getAllProfessionals(): BehaviorSubject<User[]> {\r\n    this.http\r\n      .get<User[]>('api/allProfessionals', httpOptions)\r\n      .subscribe(professionals => {\r\n        this.allProfessionals.next(professionals);\r\n      });\r\n    return this.allProfessionals;\r\n  }\r\n\r\n  getAllPatients(): BehaviorSubject<User[]> {\r\n    this.http\r\n      .get<User[]>('api/allPatients', httpOptions)\r\n      .subscribe(patients => {\r\n        this.allPatients.next(patients);\r\n      });\r\n    return this.allPatients;\r\n  }\r\n\r\n  requestAppointment(appt): BehaviorSubject<User> {\r\n    // This method stringifies the date, changing the time to ZULU time\r\n    // The offset between ZULU and Central is +5 hours\r\n    // Converting the date back to a Date type changes the time back correctly\r\n    this.http\r\n      .post<User>('api/requestAppointment', JSON.stringify(appt), httpOptions)\r\n      .subscribe((returnedUser: User) => {\r\n        this.loggedInUser.next(returnedUser);\r\n        this.saveUserLocally(returnedUser);\r\n        if (returnedUser !== null) {\r\n          this.snackBar.open('Appointment requested!', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyle'\r\n          });\r\n        }\r\n      });\r\n    return this.loggedInUser;\r\n  }\r\n\r\n  cancelRequestedAppointment(appt): BehaviorSubject<User> {\r\n    this.http\r\n      .post<User>(\r\n        'api/cancelRequestedAppointment',\r\n        JSON.stringify(appt),\r\n        httpOptions\r\n      )\r\n      .subscribe(returnedUser => {\r\n        this.loggedInUser.next(returnedUser);\r\n        this.saveUserLocally(returnedUser);\r\n        if (returnedUser !== null) {\r\n          this.snackBar.open('Appointment canceled!', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyle'\r\n          });\r\n        }\r\n      });\r\n    return this.loggedInUser;\r\n  }\r\n\r\n  cancelApprovedAppointment(appt): BehaviorSubject<User> {\r\n    this.http\r\n      .post<User>(\r\n        'api/cancelApprovedAppointment',\r\n        JSON.stringify(appt),\r\n        httpOptions\r\n      )\r\n      .subscribe(returnedUser => {\r\n        this.loggedInUser.next(returnedUser);\r\n        this.saveUserLocally(returnedUser);\r\n        if (returnedUser !== null) {\r\n          this.snackBar.open('Appointment canceled!', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyle'\r\n          });\r\n        }\r\n      });\r\n    return this.loggedInUser;\r\n  }\r\n\r\n  approveAppointment(appt): BehaviorSubject<User> {\r\n    this.http\r\n      .post<User>('api/approveAppointment', JSON.stringify(appt), httpOptions)\r\n      .subscribe(returnedUser => {\r\n        this.loggedInUser.next(returnedUser);\r\n        this.saveUserLocally(returnedUser);\r\n        if (returnedUser !== null) {\r\n          this.snackBar.open('Approved appointment!', '', {\r\n            duration: 3000,\r\n            verticalPosition: 'top',\r\n            panelClass: 'snackBarStyle'\r\n          });\r\n        }\r\n      });\r\n    return this.loggedInUser;\r\n  }\r\n}\r\n","module.exports = \".header-wrapper {\\r\\n  display: grid;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-columns: 300px 1fr 300px;\\r\\n  grid-gap: 10px;\\r\\n  grid-auto-rows: 40px;\\r\\n  grid-template-areas: 'logo tabs profile';\\r\\n}\\r\\n\\r\\n.logo {\\r\\n  grid-area: logo;\\r\\n  -ms-grid-column-align: right;\\r\\n      justify-self: right;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\\r\\n.tabs {\\r\\n  grid-area: tabs;\\r\\n}\\r\\n\\r\\n.profile {\\r\\n  grid-area: profile;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"header-wrapper\\\">\\n  <div class=\\\"logo\\\">\\n    <fa-icon class=\\\"fa-2x\\\"\\n      icon=\\\"notes-medical\\\"></fa-icon>&nbsp;\\n    <span class=\\\"mat-typography\\\"\\n      style=\\\"font-size: 20px;\\\">TheraStation</span>\\n  </div>\\n  <div class=\\\"tabs\\\">\\n    <mat-tab-group>\\n      <mat-tab label=\\\"Search\\\"> Content 1 </mat-tab>\\n      <mat-tab label=\\\"About\\\"> Content 2 </mat-tab>\\n      <mat-tab label=\\\"Search\\\"> Content 3 </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n  <div class=\\\"profile\\\">\\n    <fa-icon class=\\\"fa-2x\\\"\\n      icon=\\\"user\\\"></fa-icon>&nbsp;\\n    <span class=\\\"mat-typography\\\"\\n      style=\\\"font-size: 20px;\\\">name</span>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".form-components-wrapper {\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n      -ms-grid-columns: 200px 10px 200px;\\r\\n      grid-template-columns: 200px 200px;\\r\\n  grid-gap: 10px;\\r\\n  -ms-grid-rows: auto 10px auto 10px auto;\\r\\n      grid-template-areas:\\r\\n    'login-email    login-email'\\r\\n    'login-password login-password'\\r\\n    'login-button   cancel-button';\\r\\n}\\r\\n\\r\\n.login-email {\\r\\n  -ms-grid-row: 1;\\r\\n  -ms-grid-column: 1;\\r\\n  -ms-grid-column-span: 3;\\r\\n  grid-area: login-email;\\r\\n  width: 90%;\\r\\n  padding-left: 15px;\\r\\n  padding-top: 5px;\\r\\n}\\r\\n\\r\\n.login-password {\\r\\n  -ms-grid-row: 3;\\r\\n  -ms-grid-column: 1;\\r\\n  -ms-grid-column-span: 3;\\r\\n  grid-area: login-password;\\r\\n  width: 90%;\\r\\n  padding-left: 15px;\\r\\n  padding-top: 5px;\\r\\n}\\r\\n\\r\\n.login-button {\\r\\n  -ms-grid-row: 5;\\r\\n  -ms-grid-column: 1;\\r\\n  grid-area: login-button;\\r\\n  border: solid;\\r\\n  border-radius: 20%;\\r\\n  border-color: green;\\r\\n  color: green;\\r\\n  background-color: white;\\r\\n  margin-left: 40%;\\r\\n  max-height: 50px;\\r\\n  max-width: 100px;\\r\\n}\\r\\n\\r\\n.cancel-button {\\r\\n  -ms-grid-row: 5;\\r\\n  -ms-grid-column: 3;\\r\\n  grid-area: cancel-button;\\r\\n  border: solid;\\r\\n  border-radius: 20%;\\r\\n  border-color: red;\\r\\n  color: red;\\r\\n  background-color: white;\\r\\n  margin-right: 40%;\\r\\n  max-height: 50px;\\r\\n  max-width: 100px;\\r\\n}\\r\\n\"","module.exports = \"<h2 mat-dialog-title>Login</h2>\\r\\n<mat-dialog-content>\\r\\n  <form class=\\\"form-components-wrapper\\\"\\r\\n    #f=\\\"ngForm\\\"\\r\\n    (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n    <mat-form-field class=\\\"login-email\\\">\\r\\n      <input matInput\\r\\n        name=\\\"email\\\"\\r\\n        placeholder=\\\"Email\\\"\\r\\n        type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"loggedInUser.email\\\"\\r\\n        required\\r\\n        email>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"login-password\\\">\\r\\n      <input matInput\\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"Password\\\"\\r\\n        type=\\\"password\\\"\\r\\n        ngModel\\r\\n        required\\r\\n        password\\r\\n        minlength=\\\"8\\\">\\r\\n    </mat-form-field>\\r\\n    <button mat-button\\r\\n      type=\\\"submit\\\"\\r\\n      [disabled]=\\\"!f.valid\\\"\\r\\n      class=\\\"login-button\\\">Login</button>\\r\\n    <button mat-button\\r\\n      class=\\\"cancel-button\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-dialog-close>Cancel</button>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\"","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DataService } from '../../data.service';\r\nimport { User } from '../../models/user.model';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-login-dialog',\r\n  templateUrl: './login-dialog.component.html',\r\n  styleUrls: ['./login-dialog.component.css']\r\n})\r\nexport class LoginDialogComponent implements OnInit {\r\n  loggedInUser = new User();\r\n  @Output() closeMe = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private data: DataService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.data.login(form.value.email, form.value.password).subscribe(user => {\r\n      if (user === null) {\r\n        user = new User();\r\n        user.email = form.value.email;\r\n        this.snackBar.open('Password incorrect or account not found.', '', {\r\n          duration: 3000,\r\n          verticalPosition: 'top',\r\n          panelClass: 'snackBarStyle'\r\n        });\r\n      } else if (user.type !== undefined) {\r\n        user = user;\r\n        if (user.type.includes('Patient')) {\r\n          this.router.navigateByUrl('/user');\r\n        } else {\r\n          this.router.navigateByUrl('/professional');\r\n        }\r\n        this.dialog.closeAll();\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"login-wrapper\\\">\\r\\n  <div class=\\\"logo\\\">\\r\\n    <span>Thera</span>\\r\\n    <fa-icon class=\\\"fa-2x\\\"\\r\\n      style=\\\"margin-left: 10px; margin-right: 10px; align-content: center\\\"\\r\\n      icon=\\\"notes-medical\\\"></fa-icon>\\r\\n    <span>Station</span>\\r\\n  </div>\\r\\n  <div class=\\\"about-us\\\">\\r\\n    <p style=\\\"margin-left: 10px; margin-right: 10px;\\\">\\r\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n      magna aliqua.\\r\\n    </p>\\r\\n    <p style=\\\"margin-left: 10px; margin-right: 10px;\\\">\\r\\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis\\r\\n      aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\r\\n    </p>\\r\\n\\r\\n    <p style=\\\"margin-left: 10px; margin-right: 10px;\\\">\\r\\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"login-button\\\">\\r\\n    <button mat-button\\r\\n      (click)=\\\"openLoginDialog()\\\">Login</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"login-new-account\\\">\\r\\n    <button mat-button\\r\\n      (click)=\\\"openNewAccountDialog()\\\">New Account</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".login-wrapper {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr 1fr;\\n  grid-gap: 20px;\\n  /* autoprefixer: off */\\n  grid-auto-rows: 150px;\\n  grid-template-areas: '. logo logo .'\\r '. about-us about-us  .'\\r '. about-us about-us  .'\\r '. login-button login-new-account .'; }\\n\\n.logo {\\n  grid-area: logo;\\n  font-family: 'backyard';\\n  font-size: 50px;\\n  -ms-grid-column-align: center;\\n      justify-self: center;\\n  vertical-align: bottom;\\n  background-color: inherit; }\\n\\n.about-us {\\n  grid-area: about-us;\\n  font-family: 'backyard';\\n  font-size: 15px;\\n  max-width: 600px;\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  -ms-grid-column-align: center;\\n      justify-self: center;\\n  vertical-align: middle;\\n  border: solid;\\n  border-radius: 5%;\\n  background-color: inherit;\\n  box-shadow: 10px 10px 5px grey; }\\n\\n.login-button {\\n  grid-area: login-button;\\n  border: solid;\\n  border-radius: 20%;\\n  border-color: green;\\n  color: green;\\n  font-family: 'backyard' !important;\\n  background-color: white;\\n  -ms-grid-column-align: end;\\n      justify-self: end;\\n  margin-right: 20px;\\n  max-height: 35px;\\n  max-width: 125px; }\\n\\n.login-new-account {\\n  grid-area: login-new-account;\\n  border: solid;\\n  border-radius: 20%;\\n  border-color: blue;\\n  color: blue;\\n  font-family: 'backyard' !important;\\n  background-color: white;\\n  margin-left: 20px;\\n  max-height: 35px;\\n  max-width: 135px; }\\n\"","import { NewAccountDialogComponent } from './new-account-dialog/new-account-dialog.component';\r\nimport { LoginDialogComponent } from './login-dialog/login-dialog.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../models/user.model';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loggedInUser = new User();\r\n  constructor(private router: Router, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  openLoginDialog() {\r\n    const dialogRef = this.dialog.open(LoginDialogComponent, {\r\n      width: '450px',\r\n      height: '315px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.router.navigateByUrl('user');\r\n    });\r\n  }\r\n\r\n  openNewAccountDialog() {\r\n    this.dialog.open(NewAccountDialogComponent, {\r\n      width: '650px',\r\n      height: '425px'\r\n    });\r\n  }\r\n\r\n  onNewAccount() {\r\n    this.router.navigateByUrl('/newAccount');\r\n  }\r\n}\r\n","module.exports = \".new-account-form-component-wrapper {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr 1fr;\\r\\n  grid-gap: 10px;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-rows: 45px;\\r\\n  grid-template-areas:\\r\\n    'first-name last-name'\\r\\n    'address    address'\\r\\n    'email      password'\\r\\n    'type       type'\\r\\n    'type-select type-select'\\r\\n    'submit-new-account-button     cancel-button';\\r\\n}\\r\\n\\r\\n.new-account-form-component-less {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr 1fr;\\r\\n  grid-gap: 10px;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-rows: 45px;\\r\\n  grid-template-areas:\\r\\n    'first-name last-name'\\r\\n    'address    address'\\r\\n    'email      password'\\r\\n    'type       type'\\r\\n    'submit-new-account-button     cancel-button';\\r\\n}\\r\\n\\r\\n.first-name {\\r\\n  grid-area: first-name;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  width: 90%;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.last-name {\\r\\n  grid-area: last-name;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\n.address {\\r\\n  grid-area: address;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  width: 90%;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.email {\\r\\n  grid-area: email;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  width: 90%;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.password {\\r\\n  grid-area: password;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\n.type {\\r\\n  grid-area: type;\\r\\n  width: 90%;\\r\\n  padding-top: 20px;\\r\\n  -ms-grid-column-align: center;\\r\\n      justify-self: center;\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.type-select {\\r\\n  grid-area: type-select;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  justify-content: center;\\r\\n  margin-bottom: 10px;\\r\\n\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.submit-new-account-button {\\r\\n  grid-area: submit-new-account-button;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  border: solid;\\r\\n  border-radius: 20%;\\r\\n  border-color: green;\\r\\n  background-color: white;\\r\\n  color: green;\\r\\n  -ms-grid-column-align: right;\\r\\n      justify-self: right;\\r\\n  margin-top: 5px;\\r\\n  max-height: 50px;\\r\\n  max-width: 90px;\\r\\n}\\r\\n\\r\\n.cancel-button {\\r\\n  grid-area: cancel-button;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  border: solid;\\r\\n  border-radius: 20%;\\r\\n  border-color: red;\\r\\n  color: red;\\r\\n  background-color: white;\\r\\n  margin-top: 5px;\\r\\n  max-height: 50px;\\r\\n  max-width: 90px;\\r\\n}\\r\\n\"","module.exports = \"<h2 mat-dialog-title>Create New Account</h2>\\r\\n<mat-dialog-content>\\r\\n  <form [ngClass]=\\\"patientOrProfessional === 'Professional' ? 'new-account-form-component-wrapper' : 'new-account-form-component-less'\\\"\\r\\n    #f=\\\"ngForm\\\"\\r\\n    (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <mat-form-field class=\\\"first-name\\\">\\r\\n      <input matInput\\r\\n        name=\\\"firstName\\\"\\r\\n        placeholder=\\\"First Name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        ngModel\\r\\n        required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"last-name\\\">\\r\\n      <input matInput\\r\\n        name=\\\"lastName\\\"\\r\\n        placeholder=\\\"Last Name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        ngModel\\r\\n        required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"address\\\">\\r\\n      <input matInput\\r\\n        name=\\\"address\\\"\\r\\n        placeholder=\\\"Address\\\"\\r\\n        type=\\\"text\\\"\\r\\n        ngModel\\r\\n        address>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"email\\\">\\r\\n      <input matInput\\r\\n        name=\\\"email\\\"\\r\\n        placeholder=\\\"Email\\\"\\r\\n        type=\\\"text\\\"\\r\\n        ngModel\\r\\n        required\\r\\n        email>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"password\\\">\\r\\n      <input matInput\\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"Password\\\"\\r\\n        type=\\\"password\\\"\\r\\n        ngModel\\r\\n        required\\r\\n        password\\r\\n        minlength=\\\"8\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-radio-group class=\\\"type\\\"\\r\\n      layout=\\\"row\\\"\\r\\n      ngModel\\r\\n      [(ngModel)]=\\\"patientOrProfessional\\\"\\r\\n      name=\\\"patientOrProfessional\\\">\\r\\n      <mat-radio-button type=\\\"radio\\\"\\r\\n        value=\\\"Patient\\\">Looking for help</mat-radio-button>\\r\\n      <mat-radio-button style=\\\"padding-left: 30px\\\"\\r\\n        type=\\\"radio\\\"\\r\\n        value=\\\"Professional\\\">Looking to help</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n    <div *ngIf=\\\"patientOrProfessional === 'Professional'\\\"\\r\\n      class=\\\"type-select\\\">\\r\\n      <mat-form-field style=\\\"max-width: 200px;\\\">\\r\\n        <mat-select placeholder=\\\"&nbsp;&nbsp;&nbsp;Type of Help\\\"\\r\\n          required\\r\\n          #select\\r\\n          name=\\\"type\\\"\\r\\n          ngModel>\\r\\n          <mat-option *ngFor=\\\"let professionalType of professionalTypes\\\"\\r\\n            required\\r\\n            [value]=\\\"professionalType\\\">\\r\\n            {{ professionalType }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <button class=\\\"submit-new-account-button\\\"\\r\\n      mat-button\\r\\n      type=\\\"submit\\\"\\r\\n      [disabled]=\\\"!f.valid\\\">Create</button>\\r\\n    <button class=\\\"cancel-button\\\"\\r\\n      mat-button\\r\\n      type=\\\"button\\\"\\r\\n      mat-dialog-close>Cancel</button>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\"","import { MatDialog } from '@angular/material';\r\nimport { AccountType } from './../../models/account-type.model';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../../data.service';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-new-account-dialog',\r\n  templateUrl: './new-account-dialog.component.html',\r\n  styleUrls: ['./new-account-dialog.component.css']\r\n})\r\nexport class NewAccountDialogComponent implements OnInit {\r\n  accountTypes = new AccountType();\r\n  patientOrProfessional = this.accountTypes.PATIENT;\r\n  professionalTypes: string[] = this.accountTypes.getProfessionalTypesArray();\r\n  professionalTypeSelected = '';\r\n  @ViewChild('f')\r\n  form: NgForm;\r\n  @ViewChild('select')\r\n  select;\r\n  constructor(\r\n    private router: Router,\r\n    private data: DataService,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    const newUser = new User();\r\n    newUser.firstName = this.form.value.firstName;\r\n    newUser.lastName = this.form.value.lastName;\r\n    newUser.address = this.form.value.address;\r\n    newUser.email = this.form.value.email;\r\n    newUser.password = this.form.value.password;\r\n    if (this.patientOrProfessional.includes(this.accountTypes.PATIENT)) {\r\n      newUser.type = this.patientOrProfessional;\r\n    } else {\r\n      newUser.type = this.form.value.type;\r\n    }\r\n    this.data.createNewAccount(newUser);\r\n  }\r\n}\r\n","export class AccountType {\r\n  PATIENT = 'Patient';\r\n  PSYCHOLOGIST = 'Psychologist';\r\n  THERAPIST = 'Therapist';\r\n  PSYCHIATRIST = 'Psychiatrist';\r\n  COUNSELOR = 'Counselor';\r\n  SOCIAL_WORKER = 'Social Worker';\r\n  // others?\r\n\r\n  getProfessionalTypesArray(): string[] {\r\n    return [\r\n      this.PSYCHOLOGIST,\r\n      this.THERAPIST,\r\n      this.PSYCHIATRIST,\r\n      this.COUNSELOR,\r\n      this.SOCIAL_WORKER\r\n    ];\r\n  }\r\n\r\n  getAllTypesArray(): string[] {\r\n    return [\r\n      this.PATIENT,\r\n      this.PSYCHOLOGIST,\r\n      this.THERAPIST,\r\n      this.PSYCHIATRIST,\r\n      this.COUNSELOR,\r\n      this.SOCIAL_WORKER\r\n    ];\r\n  }\r\n}\r\n","export class Message {\r\n  dateTime: Date;\r\n  text: string;\r\n  from: string; // ID of who the message is from\r\n  to: string; // ID of who the message is to\r\n}\r\n","import { Message } from './message.model';\r\nimport { Appointment } from './appointment.model';\r\nimport { Feedback } from './feedback.model';\r\n\r\nexport class User {\r\n  _id: string;\r\n\r\n  // Profile information\r\n  firstName: string;\r\n  lastName: string;\r\n  address: string;\r\n  email: string;\r\n  password: string;\r\n\r\n  // Patient bio: Description of issues; Professional bio: list of credentials or professional history\r\n  bio: string;\r\n\r\n  // The type of account (ex. patient; type of professional) from AccountType list below\r\n  type: string;\r\n\r\n  // Appointments\r\n  requestedAppointments: Appointment[];\r\n  approvedAppointments: Appointment[];\r\n\r\n  // Messages between patient and professional\r\n  messages: Message[];\r\n\r\n  // Patient feedback: review on professionals; Professional feedback: personal note about patient\r\n  feedback: Feedback[];\r\n}\r\n","module.exports = \".header-wrapper {\\r\\n  display: grid;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-columns: 300px 1fr 300px;\\r\\n  grid-gap: 10px;\\r\\n  grid-auto-rows: 40px;\\r\\n  grid-template-areas:\\r\\n    '. . .'\\r\\n    'logo tabs profile';\\r\\n}\\r\\n\\r\\n.logo {\\r\\n  grid-area: logo;\\r\\n  -ms-grid-column-align: right;\\r\\n      justify-self: right;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\\r\\n.tabs {\\r\\n  grid-area: tabs;\\r\\n}\\r\\n\\r\\n.profile {\\r\\n  grid-area: profile;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"header-wrapper\\\">\\r\\n  <div class=\\\"logo\\\">\\r\\n    <span class=\\\"mat-typography\\\"\\r\\n      style=\\\"font-size: 20px;\\\">Thera&nbsp;&nbsp;</span>\\r\\n    <fa-icon class=\\\"fa-2x\\\"\\r\\n      icon=\\\"notes-medical\\\"></fa-icon>&nbsp;\\r\\n    <span class=\\\"mat-typography\\\"\\r\\n      style=\\\"font-size: 20px;\\\">Station</span>\\r\\n  </div>\\r\\n  <div class=\\\"tabs\\\">\\r\\n    <mat-tab-group [dynamicHeight]=\\\"true\\\">\\r\\n      <mat-tab label=\\\"Search\\\">\\r\\n        <app-search-patient></app-search-patient>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Profile\\\">\\r\\n        <app-profile-patient></app-profile-patient>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"About Us\\\">\\r\\n        <app-about-us></app-about-us>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Appointments\\\"\\r\\n        *ngIf=\\\"(user.requestedAppointments !== null &&\\r\\n            user.requestedAppointments !== undefined &&\\r\\n            user.requestedAppointments.length > 0) ||\\r\\n          (user.approvedAppointments !== null &&\\r\\n            user.approvedAppointments !== undefined &&\\r\\n            user.approvedAppointments.length > 0)\\\">\\r\\n        <app-appointments></app-appointments>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </div>\\r\\n  <div class=\\\"profile\\\">\\r\\n    <span class=\\\"noButtonLook pointer\\\"\\r\\n      [matMenuTriggerFor]=\\\"menu\\\">\\r\\n      <fa-icon class=\\\"fa-2x\\\"\\r\\n        icon=\\\"user\\\"></fa-icon>&nbsp;\\r\\n      <span class=\\\"mat-typography\\\"\\r\\n        style=\\\"font-size: 20px;\\\">{{ user.lastName }}, {{ user.firstName }}&nbsp;</span>\\r\\n      <i class=\\\"fa fa-caret-down blueText\\\"></i>\\r\\n    </span>\\r\\n    <mat-menu #menu=\\\"matMenu\\\"\\r\\n      [overlapTrigger]=\\\"false\\\"\\r\\n      xPosition=\\\"after\\\">\\r\\n      <button mat-menu-item\\r\\n        (click)=\\\"logout()\\\"\\r\\n        [routerLink]=\\\"['/login']\\\">\\r\\n        <i class=\\\"fa fa-user-o\\\"></i>&nbsp;&nbsp; <span>Logout</span>\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Router } from '@angular/router';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent implements OnInit {\n  user = new User();\n\n  constructor(private data: DataService, private router: Router) {}\n\n  ngOnInit() {\n    this.data.getLoggedInUser().subscribe(user => {\n      this.user = user;\n      if (this.user.email === undefined) {\n        this.router.navigateByUrl('/login');\n      }\n    });\n  }\n\n  logout() {\n    this.data.logout();\n  }\n}\n","module.exports = \".profile-form-component-wrapper {\\r\\n  display: grid;\\r\\n  grid-template-columns: 200px 200px 1fr;\\r\\n  grid-gap: 10px;\\r\\n  padding-top: 20px;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-rows: 45px;\\r\\n  grid-template-areas:\\r\\n    'first-name  first-name  bio'\\r\\n    'last-name   last-name   bio'\\r\\n    'address     address     bio'\\r\\n    'profile-email       profile-email       bio'\\r\\n    'type-select type-select bio'\\r\\n    '.           .           .'\\r\\n    'submit      submit      submit';\\r\\n}\\r\\n\\r\\n.first-name {\\r\\n  grid-area: first-name;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.last-name {\\r\\n  grid-area: last-name;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.address {\\r\\n  grid-area: address;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.profile-email {\\r\\n  grid-area: profile-email;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.password {\\r\\n  grid-area: password;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n}\\r\\n\\r\\n.type-select {\\r\\n  grid-area: type-select;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.bio {\\r\\n  grid-area: bio;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n  padding-right: 15px;\\r\\n  padding-top: 5px;\\r\\n  border: solid;\\r\\n  border-radius: 5%;\\r\\n}\\r\\n\\r\\n.submit {\\r\\n  grid-area: submit;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  border: solid;\\r\\n  border-radius: 20%;\\r\\n  background-color: lightgray;\\r\\n  max-height: 50px;\\r\\n  max-width: 175px;\\r\\n  margin-left: 40%;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"profile-form-component-wrapper\\\"\\r\\n  #f=\\\"ngForm\\\"\\r\\n  (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <mat-form-field class=\\\"first-name\\\">\\r\\n    <input matInput\\r\\n      name=\\\"firstName\\\"\\r\\n      placeholder=\\\"First Name\\\"\\r\\n      type=\\\"text\\\"\\r\\n      [(ngModel)]=\\\"loggedInUser.firstName\\\"\\r\\n      required>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"last-name\\\">\\r\\n    <input matInput\\r\\n      name=\\\"lastName\\\"\\r\\n      placeholder=\\\"Last Name\\\"\\r\\n      type=\\\"text\\\"\\r\\n      [(ngModel)]=\\\"loggedInUser.lastName\\\"\\r\\n      required>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"address\\\">\\r\\n    <input matInput\\r\\n      name=\\\"address\\\"\\r\\n      placeholder=\\\"Address\\\"\\r\\n      type=\\\"text\\\"\\r\\n      [(ngModel)]=\\\"loggedInUser.address\\\"\\r\\n      required\\r\\n      address>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"profile-email\\\">\\r\\n    <input matInput\\r\\n      name=\\\"email\\\"\\r\\n      placeholder=\\\"Email\\\"\\r\\n      type=\\\"text\\\"\\r\\n      [(ngModel)]=\\\"loggedInUser.email\\\"\\r\\n      required\\r\\n      email>\\r\\n  </mat-form-field>\\r\\n  <!--   <mat-form-field class=\\\"password\\\">\\r\\n    <input matInput\\r\\n      name=\\\"password\\\"\\r\\n      placeholder=\\\"Password\\\"\\r\\n      type=\\\"password\\\"\\r\\n      [(ngModel)]=\\\"loggedInUser.password\\\"\\r\\n      required\\r\\n      password\\r\\n      minlength=\\\"8\\\">\\r\\n  </mat-form-field> -->\\r\\n  <mat-form-field class=\\\"type-select\\\">\\r\\n    <mat-select placeholder=\\\"Account Type\\\"\\r\\n      required\\r\\n      name=\\\"type\\\"\\r\\n      [(ngModel)]=\\\"loggedInUser.type\\\">\\r\\n      <mat-option *ngFor=\\\"let professionalType of professionalTypes\\\"\\r\\n        [value]=\\\"professionalType\\\">\\r\\n        {{ professionalType }}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"bio\\\">\\r\\n    <textarea matInput\\r\\n      name=\\\"bio\\\"\\r\\n      placeholder=\\\"Describe yourself and any issues you are having.\\\"\\r\\n      type=\\\"text\\\"\\r\\n      matTextareaAutosize\\r\\n      matAutosizeMinRows=8\\r\\n      [(ngModel)]=\\\"loggedInUser.bio\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n  <button class=\\\"submit\\\"\\r\\n    mat-button\\r\\n    type=\\\"submit\\\"\\r\\n    [disabled]=\\\"!f.valid\\\">Update</button>\\r\\n</form>\\r\\n\"","import { DataService } from './../../data.service';\r\nimport { User } from './../../models/user.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AccountType } from '../../models/account-type.model';\r\n\r\n@Component({\r\n  selector: 'app-profile-patient',\r\n  templateUrl: './profile-patient.component.html',\r\n  styleUrls: ['./profile-patient.component.css']\r\n})\r\nexport class ProfilePatientComponent implements OnInit {\r\n  loggedInUser = new User();\r\n  originalEmail: string;\r\n  professionalTypes: string[] = new AccountType().getAllTypesArray();\r\n\r\n  constructor(private data: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.data.getLoggedInUser().subscribe(user => {\r\n      if (user.firstName !== undefined) {\r\n        this.loggedInUser = user;\r\n        this.originalEmail = this.loggedInUser.email;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.data\r\n      .updateUser(this.originalEmail, this.loggedInUser)\r\n      .subscribe(updatedUser => {\r\n        this.loggedInUser = updatedUser;\r\n      });\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  padding-left: 10px;\\r\\n  padding-right: 10px;\\r\\n  padding-top: 10px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.selected-professional-wrapper {\\r\\n  display: grid;\\r\\n  padding: 10px;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-columns: 1fr 1fr 1fr;\\r\\n  grid-gap: 10px;\\r\\n  grid-template-areas:\\r\\n    'back . .'\\r\\n    '. . .'\\r\\n    'professional-info appointment-date appointment-time'\\r\\n    '. request-appointment .'\\r\\n    '. submit-button .';\\r\\n}\\r\\n\\r\\n.back {\\r\\n  grid-area: back;\\r\\n  -ms-grid-column-align: left;\\r\\n      justify-self: left;\\r\\n}\\r\\n\\r\\n.professional-info {\\r\\n  grid-area: professional-info;\\r\\n  font-size: 17px;\\r\\n  padding-left: 20px;\\r\\n  align-items: center;\\r\\n  justify-content: right;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n}\\r\\n\\r\\n.appointment-date {\\r\\n  grid-area: appointment-date;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n}\\r\\n\\r\\n.appointment-time {\\r\\n  grid-area: appointment-time;\\r\\n  width: 250px;\\r\\n}\\r\\n\\r\\n.request-appointment {\\r\\n  grid-area: request-appointment;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n}\\r\\n\\r\\n.submit-button {\\r\\n  grid-area: submit-button;\\r\\n  border: solid;\\r\\n  border-radius: 20%;\\r\\n  border-color: green;\\r\\n  color: green;\\r\\n  background-color: white;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table\\r\\n  [dataSource]=\\\"dataSource\\\"\\r\\n  class=\\\"mat-elevation-z8 pointer\\\"\\r\\n  *ngIf=\\\"chosenProf === undefined\\\">\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[0] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">\\r\\n      {{ element.name.firstName }} {{ element.name.lastName }}\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"Type\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[1] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">{{ element.type }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"About\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[2] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\"\\r\\n      matTooltip=\\\"{{ element.about.bio }}\\\">\\r\\n      {{ element.about.text }}\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"Availability\\\">\\r\\n    <th mat-header-cell\\r\\n      *matHeaderCellDef>{{ columns[3] }}</th>\\r\\n    <td mat-cell\\r\\n      *matCellDef=\\\"let element\\\">{{ element.availability }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row\\r\\n    *matHeaderRowDef=\\\"columns\\\"></tr>\\r\\n  <tr mat-row\\r\\n    *matRowDef=\\\"let row; columns: columns\\\"\\r\\n    (click)=\\\"chooseProfessional(row)\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<div *ngIf=\\\"chosenProf !== undefined\\\"\\r\\n  class=\\\"selected-professional-wrapper\\\">\\r\\n  <div class=\\\"back pointer\\\"\\r\\n    (click)=\\\"backToProfessionalsTable()\\\">\\r\\n    <i class=\\\"fa fa-angle-left fa-2x\\\"> </i>\\r\\n    <span class=\\\"mat-typography\\\"\\r\\n      style=\\\"font-size: 20px; position: relative; bottom: 4px;\\\">&nbsp;Back to Professionals\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"professional-info mat-typography\\\">\\r\\n    <p>Name: {{ chosenProf.name.firstName }} {{ chosenProf.name.lastName }}</p>\\r\\n    <p>Type: {{ chosenProf.type }}</p>\\r\\n  </div>\\r\\n  <div class=\\\"appointment-date\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput\\r\\n        readonly\\r\\n        name=\\\"date\\\"\\r\\n        placeholder=\\\"Choose a date\\\"\\r\\n        [matDatepickerFilter]=\\\"weekendFilter\\\"\\r\\n        [min]=\\\"today\\\"\\r\\n        [matDatepicker]=\\\"picker\\\"\\r\\n        (dateInput)=\\\"assignDate($event.value)\\\" />\\r\\n      <mat-datepicker-toggle matSuffix\\r\\n        [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker disabled=\\\"false\\\"\\r\\n        #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"appointment-time\\\">\\r\\n    <div *ngIf=\\\"chosenDateAndTime !== undefined\\\">\\r\\n      <mat-form-field style=\\\"width: 250px\\\">\\r\\n        <mat-select placeholder=\\\"Choose a time\\\"\\r\\n          name=\\\"time\\\"\\r\\n          (selectionChange)=\\\"assignTime($event.value)\\\"\\r\\n          required>\\r\\n          <mat-option *ngFor=\\\"let time of appointmentTimes\\\"\\r\\n            [value]=\\\"time.hour\\\"\\r\\n            [disabled]=\\\"time.disabled\\\">\\r\\n            {{ time.time }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"request-appointment\\\">\\r\\n    <div *ngIf=\\\"\\r\\n        chosenDateAndTime !== undefined && chosenDateAndTime.getHours() > 0\\r\\n      \\\"\\r\\n      style=\\\"display: grid;\\\">\\r\\n      <button class=\\\"submit-button\\\"\\r\\n        (click)=\\\"requestAppointment()\\\"\\r\\n        mat-button>\\r\\n        Request Appointment\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../data.service';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-search-patient',\r\n  templateUrl: './search-patient.component.html',\r\n  styleUrls: ['./search-patient.component.css']\r\n})\r\nexport class SearchPatientComponent implements OnInit {\r\n  today = new Date();\r\n  chosenDateAndTime: Date;\r\n  chosenProf: {\r\n    _id: string;\r\n    name: { firstName: string; lastName: string };\r\n    type: string;\r\n    about: { text: string; bio: string };\r\n    availability: string;\r\n  };\r\n  appointmentTimes: { time: string; hour: number; disabled: boolean }[] = [\r\n    {\r\n      time: '9:00am - 9:45am',\r\n      hour: 9,\r\n      disabled: false\r\n    },\r\n    {\r\n      time: '10:00am - 10:45am',\r\n      hour: 10,\r\n      disabled: false\r\n    },\r\n    {\r\n      time: '11:00am - 11:45am',\r\n      hour: 11,\r\n      disabled: false\r\n    },\r\n    {\r\n      time: '1:00pm - 1:45pm',\r\n      hour: 13,\r\n      disabled: false\r\n    },\r\n    {\r\n      time: '2:00pm - 2:45pm',\r\n      hour: 14,\r\n      disabled: false\r\n    },\r\n    {\r\n      time: '3:00pm - 3:45pm',\r\n      hour: 15,\r\n      disabled: false\r\n    },\r\n    {\r\n      time: '4:00pm - 4:45pm',\r\n      hour: 16,\r\n      disabled: false\r\n    }\r\n  ];\r\n  columns: string[] = ['Name', 'Type', 'About', 'Availability'];\r\n  dataSource;\r\n  loggedInUser: User;\r\n  weekendFilter = (d: Date): boolean => {\r\n    const day = d.getDay();\r\n    // Prevent Saturday and Sunday from being selected.\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  constructor(private data: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.data.getLoggedInUser().subscribe(user => {\r\n      this.loggedInUser = user;\r\n    });\r\n    this.today.setDate(this.today.getDate() + 1);\r\n    this.data.getAllProfessionals().subscribe(professionals => {\r\n      const profArray = [];\r\n      if (professionals) {\r\n        professionals.forEach(prof => {\r\n          const newProf: {\r\n            _id: string;\r\n            name: { firstName: string; lastName: string };\r\n            type: string;\r\n            about: { text: string; bio: string };\r\n            availability: string;\r\n          } = {\r\n            _id: prof._id,\r\n            name: { firstName: prof.firstName, lastName: prof.lastName },\r\n            type: prof.type,\r\n            about: { text: 'Scroll over for bio!', bio: prof.bio },\r\n            availability: 'Click to select a date and time.'\r\n          };\r\n          profArray.push(newProf);\r\n        });\r\n      }\r\n\r\n      this.dataSource = profArray;\r\n    });\r\n  }\r\n\r\n  assignDate(date) {\r\n    this.chosenDateAndTime = date;\r\n  }\r\n\r\n  chooseProfessional(prof) {\r\n    this.chosenProf = prof;\r\n  }\r\n\r\n  backToProfessionalsTable() {\r\n    this.chosenProf = undefined;\r\n  }\r\n\r\n  assignTime(hour) {\r\n    this.chosenDateAndTime.setHours(hour);\r\n  }\r\n\r\n  requestAppointment() {\r\n    const appt = {\r\n      patient: this.loggedInUser._id,\r\n      professional: this.chosenProf._id,\r\n      appointment: this.chosenDateAndTime\r\n    };\r\n    this.data.updateUserLocally(this.loggedInUser);\r\n    this.data.requestAppointment(appt).subscribe(user => {\r\n      if (user !== null) {\r\n        this.chosenDateAndTime = undefined;\r\n        this.chosenProf = undefined;\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".header-wrapper {\\r\\n  display: grid;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-columns: 300px 1fr 300px;\\r\\n  grid-gap: 10px;\\r\\n  grid-auto-rows: 40px;\\r\\n  grid-template-areas:\\r\\n    '. . .'\\r\\n    'logo tabs profile';\\r\\n}\\r\\n\\r\\n.logo {\\r\\n  grid-area: logo;\\r\\n  -ms-grid-column-align: right;\\r\\n      justify-self: right;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\\r\\n.tabs {\\r\\n  grid-area: tabs;\\r\\n}\\r\\n\\r\\n.profile {\\r\\n  grid-area: profile;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"header-wrapper\\\">\\r\\n  <div class=\\\"logo\\\">\\r\\n    <span class=\\\"mat-typography\\\"\\r\\n      style=\\\"font-size: 20px;\\\">Thera&nbsp;&nbsp;</span>\\r\\n    <fa-icon class=\\\"fa-2x\\\"\\r\\n      icon=\\\"notes-medical\\\"></fa-icon>&nbsp;\\r\\n    <span class=\\\"mat-typography\\\"\\r\\n      style=\\\"font-size: 20px;\\\">Station</span>\\r\\n  </div>\\r\\n  <div class=\\\"tabs\\\">\\r\\n    <mat-tab-group [dynamicHeight]=\\\"true\\\">\\r\\n      <mat-tab label=\\\"Appointments\\\">\\r\\n        <app-appointments></app-appointments>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Profile\\\">\\r\\n        <app-profile-professional></app-profile-professional>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"About Us\\\">\\r\\n        <app-about-us></app-about-us>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Appointments\\\"\\r\\n        *ngIf=\\\"(user.requestedAppointments !== null &&\\r\\n            user.requestedAppointments !== undefined &&\\r\\n            user.requestedAppointments.length > 0) ||\\r\\n          (user.approvedAppointments !== null &&\\r\\n            user.approvedAppointments !== undefined &&\\r\\n            user.approvedAppointments.length > 0)\\\">\\r\\n        <app-appointments></app-appointments>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </div>\\r\\n  <div class=\\\"profile\\\">\\r\\n    <span class=\\\"noButtonLook pointer\\\"\\r\\n      [matMenuTriggerFor]=\\\"menu\\\">\\r\\n      <fa-icon class=\\\"fa-2x\\\"\\r\\n        icon=\\\"user\\\"></fa-icon>&nbsp;\\r\\n      <span class=\\\"mat-typography\\\"\\r\\n        style=\\\"font-size: 20px;\\\">{{ user.lastName }}, {{ user.firstName }}&nbsp;</span>\\r\\n      <i class=\\\"fa fa-caret-down blueText\\\"></i>\\r\\n    </span>\\r\\n    <mat-menu #menu=\\\"matMenu\\\"\\r\\n      [overlapTrigger]=\\\"false\\\"\\r\\n      xPosition=\\\"after\\\">\\r\\n      <button mat-menu-item\\r\\n        (click)=\\\"logout()\\\"\\r\\n        [routerLink]=\\\"['/login']\\\">\\r\\n        <i class=\\\"fa fa-user-o\\\"></i>&nbsp;&nbsp; <span>Logout</span>\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Router } from '@angular/router';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { AccountType } from '../models/account-type.model';\n\n@Component({\n  selector: 'app-professional',\n  templateUrl: './professional.component.html',\n  styleUrls: ['./professional.component.css']\n})\nexport class ProfessionalComponent implements OnInit {\n  user = new User();\n\n  constructor(private data: DataService, private router: Router) {}\n\n  ngOnInit() {\n    this.data.getLoggedInUser().subscribe(user => {\n      this.user = user;\n      if (this.user.email === undefined) {\n        this.router.navigateByUrl('/login');\n      }\n    });\n  }\n\n  logout() {\n    this.data.logout();\n  }\n}\n","module.exports = \".profile-form-component-wrapper {\\r\\n  display: grid;\\r\\n  grid-template-columns: 200px 200px 1fr;\\r\\n  grid-gap: 10px;\\r\\n  padding-top: 20px;\\r\\n  /* autoprefixer: off */\\r\\n  grid-auto-rows: 45px;\\r\\n  grid-template-areas:\\r\\n    'first-name  first-name  bio'\\r\\n    'last-name   last-name   bio'\\r\\n    'address     address     bio'\\r\\n    'profile-email       profile-email       bio'\\r\\n    'type-select type-select bio'\\r\\n    '.           .           .'\\r\\n    'submit      submit      submit';\\r\\n}\\r\\n\\r\\n.first-name {\\r\\n  grid-area: first-name;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.last-name {\\r\\n  grid-area: last-name;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.address {\\r\\n  grid-area: address;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.profile-email {\\r\\n  grid-area: profile-email;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.password {\\r\\n  grid-area: password;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n}\\r\\n\\r\\n.type-select {\\r\\n  grid-area: type-select;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.bio {\\r\\n  grid-area: bio;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  padding-left: 15px;\\r\\n  padding-right: 15px;\\r\\n  border: solid;\\r\\n  border-radius: 5%;\\r\\n}\\r\\n\\r\\n.submit {\\r\\n  grid-area: submit;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  border: solid;\\r\\n  border-radius: 20%;\\r\\n  background-color: lightgray;\\r\\n  max-height: 50px;\\r\\n  max-width: 175px;\\r\\n  margin-left: 40%;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"profile-form-component-wrapper\\\"\\n  #f=\\\"ngForm\\\"\\n  (ngSubmit)=\\\"onSubmit()\\\">\\n  <mat-form-field class=\\\"first-name\\\">\\n    <input matInput\\n      name=\\\"firstName\\\"\\n      placeholder=\\\"First Name\\\"\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"loggedInUser.firstName\\\"\\n      required>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"last-name\\\">\\n    <input matInput\\n      name=\\\"lastName\\\"\\n      placeholder=\\\"Last Name\\\"\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"loggedInUser.lastName\\\"\\n      required>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"address\\\">\\n    <input matInput\\n      name=\\\"address\\\"\\n      placeholder=\\\"Address\\\"\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"loggedInUser.address\\\"\\n      required\\n      address>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"profile-email\\\">\\n    <input matInput\\n      name=\\\"email\\\"\\n      placeholder=\\\"Email\\\"\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"loggedInUser.email\\\"\\n      required\\n      email>\\n  </mat-form-field>\\n  <!--   <mat-form-field class=\\\"password\\\">\\n    <input matInput\\n      name=\\\"password\\\"\\n      placeholder=\\\"Password\\\"\\n      type=\\\"password\\\"\\n      [(ngModel)]=\\\"loggedInUser.password\\\"\\n      required\\n      password\\n      minlength=\\\"8\\\">\\n  </mat-form-field> -->\\n  <mat-form-field class=\\\"type-select\\\">\\n    <mat-select placeholder=\\\"Account Type\\\"\\n      required\\n      name=\\\"type\\\"\\n      [(ngModel)]=\\\"loggedInUser.type\\\">\\n      <mat-option *ngFor=\\\"let professionalType of professionalTypes\\\"\\n        [value]=\\\"professionalType\\\">\\n        {{ professionalType }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"bio\\\">\\n    <textarea matInput\\n      name=\\\"bio\\\"\\n      placeholder=\\\"Describe yourself to potential patients!\\\"\\n      type=\\\"text\\\"\\n      matTextareaAutosize\\n      matAutosizeMinRows=13\\n      [(ngModel)]=\\\"loggedInUser.bio\\\"></textarea>\\n  </mat-form-field>\\n  <button class=\\\"submit\\\"\\n    mat-button\\n    type=\\\"submit\\\"\\n    [disabled]=\\\"!f.valid\\\">Update</button>\\n</form>\\n\"","import { AccountType } from './../../models/account-type.model';\r\nimport { User } from './../../models/user.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../data.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-professional',\r\n  templateUrl: './profile-professional.component.html',\r\n  styleUrls: ['./profile-professional.component.css']\r\n})\r\nexport class ProfileProfessionalComponent implements OnInit {\r\n  loggedInUser = new User();\r\n  originalEmail: string;\r\n  professionalTypes: string[] = new AccountType().getAllTypesArray();\r\n\r\n  constructor(private data: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.data.getLoggedInUser().subscribe(user => {\r\n      if (user.firstName !== undefined) {\r\n        this.loggedInUser = user;\r\n        this.originalEmail = this.loggedInUser.email;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.data\r\n      .updateUser(this.originalEmail, this.loggedInUser)\r\n      .subscribe(updatedUser => {\r\n        this.loggedInUser = updatedUser;\r\n      });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}